// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Net14.Web.EfStuff;

namespace Net14.Web.Migrations
{
    [DbContext(typeof(WebContext))]
    [Migration("20220311180228_FixUserSocial")]
    partial class FixUserSocial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Net14.Web.EfStuff.DbModel.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("Net14.Web.EfStuff.DbModel.SocialDbModels.UserSocial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Salt")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("UserSocialId")
                        .HasColumnType("int");

                    b.Property<int?>("settingsId")
                        .HasColumnType("int");

                    b.Property<int?>("socialId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserSocialId");

                    b.HasIndex("settingsId");

                    b.HasIndex("socialId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SocialWeb.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Salt")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("settingsId")
                        .HasColumnType("int");

                    b.Property<int?>("socialId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("settingsId");

                    b.HasIndex("socialId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("TeamSocial.Social", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("Social");
                });

            modelBuilder.Entity("TeamSocial.UserSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("UserSettings");
                });

            modelBuilder.Entity("Net14.Web.EfStuff.DbModel.SocialDbModels.UserSocial", b =>
                {
                    b.HasOne("Net14.Web.EfStuff.DbModel.SocialDbModels.UserSocial", null)
                        .WithMany("friends")
                        .HasForeignKey("UserSocialId");

                    b.HasOne("TeamSocial.UserSettings", "settings")
                        .WithMany()
                        .HasForeignKey("settingsId");

                    b.HasOne("TeamSocial.Social", "social")
                        .WithMany()
                        .HasForeignKey("socialId");

                    b.Navigation("settings");

                    b.Navigation("social");
                });

            modelBuilder.Entity("SocialWeb.User", b =>
                {
                    b.HasOne("SocialWeb.User", null)
                        .WithMany("friends")
                        .HasForeignKey("UserId");

                    b.HasOne("TeamSocial.UserSettings", "settings")
                        .WithMany()
                        .HasForeignKey("settingsId");

                    b.HasOne("TeamSocial.Social", "social")
                        .WithMany("users")
                        .HasForeignKey("socialId");

                    b.Navigation("settings");

                    b.Navigation("social");
                });

            modelBuilder.Entity("Net14.Web.EfStuff.DbModel.SocialDbModels.UserSocial", b =>
                {
                    b.Navigation("friends");
                });

            modelBuilder.Entity("SocialWeb.User", b =>
                {
                    b.Navigation("friends");
                });

            modelBuilder.Entity("TeamSocial.Social", b =>
                {
                    b.Navigation("users");
                });
#pragma warning restore 612, 618
        }
    }
}
